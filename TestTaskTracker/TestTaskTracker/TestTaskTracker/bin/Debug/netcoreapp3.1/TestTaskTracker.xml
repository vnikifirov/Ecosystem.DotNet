<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TestTaskTracker</name>
    </assembly>
    <members>
        <member name="T:TestTaskTracker.Controllers.ProjectsController">
            <summary>
            Project controller
            </summary>
        </member>
        <member name="M:TestTaskTracker.Controllers.ProjectsController.GetProject(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get project by id
            </summary>
            <param name="id">Id of project</param>
            <param name="cancellationToken"></param>
            <returns><see cref="T:Business.Services.Domain.Responses.ProjectResponse"/></returns>
        </member>
        <member name="M:TestTaskTracker.Controllers.ProjectsController.GetProjects(Business.Services.Domain.Responses.ProjectQuery,System.Threading.CancellationToken)">
            <summary>
            Get projects
            </summary>
            <param name="queryObj">Query object</param>
            <param name="cancellationToken"></param>
            <returns><see cref="T:Business.Services.Domain.Responses.ProjectResponse"/></returns>
        </member>
        <member name="M:TestTaskTracker.Controllers.ProjectsController.GetProjectWithTasks(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get project with tasks
            </summary>
            <param name="id">Id of project</param>
            <param name="cancellationToken"></param>
            <returns><see cref="T:Business.Services.Domain.Responses.ProjectResponse"/></returns>
        </member>
        <member name="T:TestTaskTracker.Controllers.TasksController">
            <summary>
            Task controller
            </summary>
        </member>
        <member name="M:TestTaskTracker.Controllers.TasksController.GetTask(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get task by id
            </summary>
            <param name="id">Id of task</param>
            <param name="cancellationToken"></param>
            <returns><see cref="T:Business.Services.Domain.Responses.TaskResponse"/></returns>
        </member>
        <member name="M:TestTaskTracker.Controllers.TasksController.GetTasks(System.Threading.CancellationToken)">
            <summary>
            Get tasks
            </summary>
            <param name="cancellationToken"></param>
            <returns><see cref="T:Business.Services.Domain.Responses.TaskResponse"/></returns>
        </member>
        <member name="M:TestTaskTracker.Controllers.TasksController.Create(Business.Services.Domain.Requests.CreateTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Create new task
            </summary>
            <param name="resource">New task</param>
            <param name="cancellationToken"></param>
            <returns><see cref="T:Business.Services.Domain.Requests.CreateTaskRequest"/></returns>
        </member>
        <member name="M:TestTaskTracker.Controllers.TasksController.Update(System.Int64,Business.Services.Domain.Requests.SaveTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Update existing task
            </summary>
            <param name="id">id of task</param>
            <param name="resource">Updated task</param>
            <param name="cancellationToken"></param>
            <returns><see cref="T:Business.Services.Domain.Requests.SaveTaskRequest"/></returns>
        </member>
        <member name="M:TestTaskTracker.Controllers.TasksController.Delete(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Delete existing task by id
            </summary>
            <param name="id">id of task</param>
            <returns><see cref="T:System.Int64"/></returns>
        </member>
    </members>
</doc>
