a as (double)
d = Item as DataArray
d.Normalize().ToArray(a)

accor = MathOp.Accor(a, a.Length)

cf = (  0.0192355,  0.0075185,  -0.0101490, -0.0280057, -0.0387952,  -0.0359261,
 -0.0156895,   0.0211852,   0.0691956,  0.1191492,  0.1604181,  0.1837399,  0.1837399,
  0.1604181,   0.1191492,  0.0691956,  0.0211852, -0.0156895, -0.0359261,  -0.0387952,
 -0.0280057, -0.0101490,  0.0075185,  0.0192355)

cf2 = (   -0.0262344,  -0.0125732   ,0.0158339   ,0.0368810   ,0.0293365  ,-0.0086874  ,-0.0526801  ,-0.0636865  ,-0.0135470   ,0.0929289   ,0.2149363   ,0.2959852   ,0.2959852   ,0.2149363   ,0.0929289  ,-0.0135470  ,-0.0636865  ,-0.0526801  ,-0.0086874   ,0.0293365   ,0.0368810   ,0.0158339  ,-0.0125732  ,-0.0262344   )

cf3 = (  -0.0279104,  -0.0132439,   0.0165291,   0.0381910,   0.0301625,  -0.0088765,  -0.0535415,  -0.0644424,  -0.0136595,   0.0934531,   0.2157688,   0.2968704,   0.2968704,   0.2157688,   0.0934531,  -0.0136595,  -0.0644424,  -0.0535415,  -0.0088765,   0.0301625,   0.0381910,   0.0165291,  -0.0132439,  -0.0279104)

#display accor

#k = Math.Ceiling(0.4 * 115)
k = (len(cf)-1) / 2
qq = array(double, a.Length)

for i in range(a.Length):
	sm = 0.0
	l = 0
	for j in range(-k, k+1):
		if (i+j < 0):
			continue
		elif (i+j >= a.Length):
			continue
		else:
			//sm = sm + a[i + j] * (k + 1 - Math.Abs(j))
			sm = sm + a[i + j] * cf[k + j]
			l++
	//qq[i] = l * sm / (k * k * k );
	qq[i] = sm;


display qq
